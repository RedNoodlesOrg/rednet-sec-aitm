[project]
name = "py-project-toml"
version = "0.1.0"
description = "Sample Python Project for creating a new Python Module"
authors = [{ name = "Fakeapate", email = "imboden.samuel@protonmail.ch" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = "==3.12.*"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "mitmproxy>=10.3.0",
]

[tool.project-customizations.docs]
theme = "sphinx_rtd_theme"

[project.urls]
Documentation = "https://github.com/RedNoodlesOrg/python-package-template/tree/main#readme"
Source = "https://github.com/RedNoodlesOrg/python-package-template"
Tracker = "https://github.com/RedNoodlesOrg/python-package-template/issues"

[project.optional-dependencies]
dev = [
    "bandit[toml]>=1.7.8",
    "black>=24.4.2",
    "check-manifest>=0.49",
    "flake8>=7.0.0",
    "flake8-bugbear>=24.4.26",
    "flake8-docstrings>=1.7.0",
    "flake8-formatter-junit-xml>=0.0.6",
    "flake8-pyproject>=1.2.3",
    "isort>=5.13.2",
    "pre-commit>=3.7.0",
    "pylance>=0.10.17",
    "pylint>=3.1.0",
    "pylint-junit>=0.3.4",
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "pytest-github-actions-annotate-failures>=0.2.0",
    "pytest-mock>=3.14.0",
    "pytest-runner>=6.0.1",
    "shellcheck-py>=0.10.0.1",
    "virtualenv>=20.26.1",
]
docs = [
    "sphinx>=7.3.7",
    "sphinx-rtd-theme>=2.0.0",
    "enum-tools[sphinx]>=0.12.0",
]

[tool.pdm]
distribution = false

[tool.black]
line-length = 120
fast = true

[tool.flake8]
max-line-length = 120
extend-ignore = "E203, W503"
exclude = ".git, .venv, __pycache__, build, dist"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
]
